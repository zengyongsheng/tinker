apply plugin: 'com.android.application'
apply plugin: 'walle'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.example.frankie.waller"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // 开启multidex
        multiDexEnabled true
    }
    // 编译选项
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    // recommend
    dexOptions {
        jumboMode = true
    }
    //需要配置自己的签名
    signingConfigs {
        release {
            try {
                keyAlias 'mywaller'
                keyPassword '123456'
                storeFile file('wallerkey.jks')
                storePassword '123456'
            }
            catch (ex) {
                //throw new Exception("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties")
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    //walle 打包
    compile 'com.meituan.android.walle:library:1.1.3'
    // 多dex配置
    compile "com.android.support:multidex:1.0.1"
    // 集成Bugly热更新aar（本地集成使用方式）
//      compile(name: 'bugly_crashreport_upgrade-1.3.0', ext: 'aar')
    // 远程仓库集成方式（推荐）
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.1'
}
// 依赖插件脚本
apply from: 'tinker-support.gradle'
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")

//            所有渠道
//            gradlew clean assembleReleaseChannels
//
//            指定渠道
//          生成单个渠道包（huawei渠道）:
//
//           gradlew clean assembleReleaseChannels -PchannelList=huawei
//

//           生成多个渠道包（huawei、xiaomi渠道）:
//
//          gradlew clean assembleReleaseChannels -PchannelList=huawei,xiaomi,Yyb,Qh360,Wdj,Lenovo,Meizhu
}
